
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.OrganizationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  domain: 'domain',
  subdomain: 'subdomain',
  description: 'description',
  logo: 'logo',
  website: 'website',
  subscriptionStatus: 'subscriptionStatus',
  subscriptionPlan: 'subscriptionPlan',
  trialEndsAt: 'trialEndsAt',
  subscriptionEndsAt: 'subscriptionEndsAt',
  stripeCustomerId: 'stripeCustomerId',
  settings: 'settings',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  firstName: 'firstName',
  lastName: 'lastName',
  avatar: 'avatar',
  bio: 'bio',
  organizationId: 'organizationId',
  role: 'role',
  emailVerified: 'emailVerified',
  emailVerifiedAt: 'emailVerifiedAt',
  lastLoginAt: 'lastLoginAt',
  resetToken: 'resetToken',
  resetTokenExpiry: 'resetTokenExpiry',
  preferences: 'preferences',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InvitationScalarFieldEnum = {
  id: 'id',
  email: 'email',
  organizationId: 'organizationId',
  role: 'role',
  token: 'token',
  status: 'status',
  expiresAt: 'expiresAt',
  invitedBy: 'invitedBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SampleScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  name: 'name',
  description: 'description',
  code: 'code',
  origin: 'origin',
  region: 'region',
  farm: 'farm',
  producer: 'producer',
  variety: 'variety',
  altitude: 'altitude',
  processingMethod: 'processingMethod',
  harvestDate: 'harvestDate',
  roaster: 'roaster',
  roastDate: 'roastDate',
  roastLevel: 'roastLevel',
  moisture: 'moisture',
  density: 'density',
  screenSize: 'screenSize',
  notes: 'notes',
  imageUrl: 'imageUrl',
  tags: 'tags',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CuppingTemplateScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  createdBy: 'createdBy',
  name: 'name',
  description: 'description',
  isDefault: 'isDefault',
  isPublic: 'isPublic',
  scoringSystem: 'scoringSystem',
  maxScore: 'maxScore',
  categories: 'categories',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CuppingSessionScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  createdBy: 'createdBy',
  name: 'name',
  description: 'description',
  location: 'location',
  templateId: 'templateId',
  blindTasting: 'blindTasting',
  allowComments: 'allowComments',
  requireCalibration: 'requireCalibration',
  status: 'status',
  scheduledAt: 'scheduledAt',
  startedAt: 'startedAt',
  completedAt: 'completedAt',
  notes: 'notes',
  tags: 'tags',
  settings: 'settings',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SessionParticipantScalarFieldEnum = {
  id: 'id',
  sessionId: 'sessionId',
  userId: 'userId',
  role: 'role',
  joinedAt: 'joinedAt',
  leftAt: 'leftAt',
  isActive: 'isActive',
  isCalibrated: 'isCalibrated',
  calibratedAt: 'calibratedAt'
};

exports.Prisma.SessionSampleScalarFieldEnum = {
  id: 'id',
  sessionId: 'sessionId',
  sampleId: 'sampleId',
  position: 'position',
  isBlind: 'isBlind',
  blindCode: 'blindCode',
  grindSize: 'grindSize',
  waterTemp: 'waterTemp',
  brewRatio: 'brewRatio',
  steepTime: 'steepTime',
  aiSummary: 'aiSummary',
  aiGeneratedAt: 'aiGeneratedAt',
  addedAt: 'addedAt'
};

exports.Prisma.ScoreScalarFieldEnum = {
  id: 'id',
  sessionId: 'sessionId',
  sessionSampleId: 'sessionSampleId',
  sampleId: 'sampleId',
  userId: 'userId',
  totalScore: 'totalScore',
  maxScore: 'maxScore',
  scores: 'scores',
  aroma: 'aroma',
  flavor: 'flavor',
  aftertaste: 'aftertaste',
  acidity: 'acidity',
  body: 'body',
  balance: 'balance',
  sweetness: 'sweetness',
  cleanliness: 'cleanliness',
  uniformity: 'uniformity',
  overall: 'overall',
  defects: 'defects',
  notes: 'notes',
  privateNotes: 'privateNotes',
  voiceNotes: 'voiceNotes',
  voiceFileUrl: 'voiceFileUrl',
  isComplete: 'isComplete',
  isSubmitted: 'isSubmitted',
  submittedAt: 'submittedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FlavorDescriptorScalarFieldEnum = {
  id: 'id',
  name: 'name',
  category: 'category',
  description: 'description',
  isDefault: 'isDefault',
  organizationId: 'organizationId',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ScoreFlavorDescriptorScalarFieldEnum = {
  id: 'id',
  scoreId: 'scoreId',
  flavorDescriptorId: 'flavorDescriptorId',
  intensity: 'intensity',
  createdAt: 'createdAt'
};

exports.Prisma.GreenBeanGradingScalarFieldEnum = {
  id: 'id',
  sampleId: 'sampleId',
  gradingSystem: 'gradingSystem',
  primaryDefects: 'primaryDefects',
  secondaryDefects: 'secondaryDefects',
  fullDefectEquivalents: 'fullDefectEquivalents',
  defectBreakdown: 'defectBreakdown',
  screenSizeDistribution: 'screenSizeDistribution',
  averageScreenSize: 'averageScreenSize',
  uniformityPercentage: 'uniformityPercentage',
  moistureContent: 'moistureContent',
  waterActivity: 'waterActivity',
  bulkDensity: 'bulkDensity',
  colorScore: 'colorScore',
  uniformityScore: 'uniformityScore',
  grade: 'grade',
  classification: 'classification',
  qualityScore: 'qualityScore',
  gradedBy: 'gradedBy',
  gradedAt: 'gradedAt',
  certifiedBy: 'certifiedBy',
  certificationDate: 'certificationDate',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.UserRole = exports.$Enums.UserRole = {
  ADMIN: 'ADMIN',
  MANAGER: 'MANAGER',
  CUPPER: 'CUPPER',
  VIEWER: 'VIEWER'
};

exports.SubscriptionStatus = exports.$Enums.SubscriptionStatus = {
  TRIAL: 'TRIAL',
  ACTIVE: 'ACTIVE',
  PAST_DUE: 'PAST_DUE',
  CANCELED: 'CANCELED',
  UNPAID: 'UNPAID'
};

exports.SubscriptionPlan = exports.$Enums.SubscriptionPlan = {
  STARTER: 'STARTER',
  PROFESSIONAL: 'PROFESSIONAL',
  ENTERPRISE: 'ENTERPRISE',
  CUSTOM: 'CUSTOM'
};

exports.InvitationStatus = exports.$Enums.InvitationStatus = {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  EXPIRED: 'EXPIRED',
  REVOKED: 'REVOKED'
};

exports.ProcessingMethod = exports.$Enums.ProcessingMethod = {
  WASHED: 'WASHED',
  NATURAL: 'NATURAL',
  HONEY: 'HONEY',
  SEMI_WASHED: 'SEMI_WASHED',
  WET_HULLED: 'WET_HULLED',
  ANAEROBIC: 'ANAEROBIC',
  CARBONIC_MACERATION: 'CARBONIC_MACERATION',
  OTHER: 'OTHER'
};

exports.RoastLevel = exports.$Enums.RoastLevel = {
  LIGHT: 'LIGHT',
  MEDIUM_LIGHT: 'MEDIUM_LIGHT',
  MEDIUM: 'MEDIUM',
  MEDIUM_DARK: 'MEDIUM_DARK',
  DARK: 'DARK',
  FRENCH: 'FRENCH',
  ITALIAN: 'ITALIAN'
};

exports.ScoringSystem = exports.$Enums.ScoringSystem = {
  SCA: 'SCA',
  COE: 'COE',
  CUSTOM: 'CUSTOM'
};

exports.SessionStatus = exports.$Enums.SessionStatus = {
  DRAFT: 'DRAFT',
  SCHEDULED: 'SCHEDULED',
  ACTIVE: 'ACTIVE',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED',
  ARCHIVED: 'ARCHIVED'
};

exports.ParticipantRole = exports.$Enums.ParticipantRole = {
  CUPPER: 'CUPPER',
  HEAD_JUDGE: 'HEAD_JUDGE',
  OBSERVER: 'OBSERVER'
};

exports.FlavorCategory = exports.$Enums.FlavorCategory = {
  POSITIVE: 'POSITIVE',
  NEGATIVE: 'NEGATIVE'
};

exports.GradingSystem = exports.$Enums.GradingSystem = {
  SCA: 'SCA',
  ETHIOPIAN: 'ETHIOPIAN',
  COLOMBIAN: 'COLOMBIAN',
  BRAZILIAN: 'BRAZILIAN',
  KENYAN: 'KENYAN',
  CUSTOM: 'CUSTOM'
};

exports.GradeClassification = exports.$Enums.GradeClassification = {
  SPECIALTY_GRADE: 'SPECIALTY_GRADE',
  PREMIUM_GRADE: 'PREMIUM_GRADE',
  EXCHANGE_GRADE: 'EXCHANGE_GRADE',
  BELOW_STANDARD: 'BELOW_STANDARD',
  OFF_GRADE: 'OFF_GRADE'
};

exports.Prisma.ModelName = {
  Organization: 'Organization',
  User: 'User',
  Invitation: 'Invitation',
  Sample: 'Sample',
  CuppingTemplate: 'CuppingTemplate',
  CuppingSession: 'CuppingSession',
  SessionParticipant: 'SessionParticipant',
  SessionSample: 'SessionSample',
  Score: 'Score',
  FlavorDescriptor: 'FlavorDescriptor',
  ScoreFlavorDescriptor: 'ScoreFlavorDescriptor',
  GreenBeanGrading: 'GreenBeanGrading'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/app/apps/api/generated/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "linux-musl-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/app/apps/api/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../..",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// Cupperly Database Schema\n// Multi-tenant SaaS platform for professional coffee cupping\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"./generated/client\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// ============================================================================\n// CORE TENANT & USER MODELS\n// ============================================================================\n\nmodel Organization {\n  id          String  @id @default(cuid())\n  name        String\n  slug        String  @unique\n  domain      String? @unique\n  subdomain   String  @unique\n  description String?\n  logo        String?\n  website     String?\n\n  // Subscription & billing\n  subscriptionStatus SubscriptionStatus @default(TRIAL)\n  subscriptionPlan   SubscriptionPlan   @default(STARTER)\n  trialEndsAt        DateTime?\n  subscriptionEndsAt DateTime?\n  stripeCustomerId   String?            @unique\n\n  // Settings\n  settings Json @default(\"{}\")\n\n  // Timestamps\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  users             User[]\n  cuppingSessions   CuppingSession[]\n  samples           Sample[]\n  templates         CuppingTemplate[]\n  invitations       Invitation[]\n  flavorDescriptors FlavorDescriptor[]\n\n  @@map(\"organizations\")\n}\n\nmodel User {\n  id       String @id @default(cuid())\n  email    String @unique\n  password String\n\n  // Profile\n  firstName String\n  lastName  String\n  avatar    String?\n  bio       String?\n\n  // Organization relationship\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  role           UserRole     @default(CUPPER)\n\n  // Authentication\n  emailVerified    Boolean   @default(false)\n  emailVerifiedAt  DateTime?\n  lastLoginAt      DateTime?\n  resetToken       String?\n  resetTokenExpiry DateTime?\n\n  // Preferences\n  preferences Json @default(\"{}\")\n\n  // Timestamps\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  cuppingSessions          CuppingSession[]\n  scores                   Score[]\n  sessionParticipants      SessionParticipant[]\n  createdTemplates         CuppingTemplate[]\n  createdFlavorDescriptors FlavorDescriptor[]\n\n  @@map(\"users\")\n}\n\nmodel Invitation {\n  id             String           @id @default(cuid())\n  email          String\n  organizationId String\n  organization   Organization     @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  role           UserRole         @default(CUPPER)\n  token          String           @unique\n  status         InvitationStatus @default(PENDING)\n  expiresAt      DateTime\n  invitedBy      String\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([email, organizationId])\n  @@map(\"invitations\")\n}\n\n// ============================================================================\n// COFFEE CUPPING MODELS\n// ============================================================================\n\nmodel Sample {\n  id             String       @id @default(cuid())\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  // Basic information\n  name        String\n  description String?\n  code        String? // Internal sample code\n\n  // Coffee details\n  origin   String\n  region   String?\n  farm     String?\n  producer String?\n  variety  String?\n  altitude Int?\n\n  // Processing\n  processingMethod ProcessingMethod?\n  harvestDate      DateTime?\n\n  // Roasting\n  roaster    String?\n  roastDate  DateTime?\n  roastLevel RoastLevel?\n\n  // Physical attributes\n  moisture   Float?\n  density    Float?\n  screenSize String?\n\n  // Metadata\n  notes    String?\n  imageUrl String?\n  tags     String[] @default([])\n\n  // Timestamps\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  sessionSamples   SessionSample[]\n  scores           Score[]\n  greenBeanGrading GreenBeanGrading?\n\n  @@map(\"samples\")\n}\n\nmodel CuppingTemplate {\n  id             String       @id @default(cuid())\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  createdBy      String\n  creator        User         @relation(fields: [createdBy], references: [id])\n\n  // Template details\n  name        String\n  description String?\n  isDefault   Boolean @default(false)\n  isPublic    Boolean @default(false)\n\n  // Scoring configuration\n  scoringSystem ScoringSystem @default(SCA)\n  maxScore      Int           @default(100)\n\n  // Template structure\n  categories Json // Array of scoring categories with weights\n\n  // Timestamps\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  cuppingSessions CuppingSession[]\n\n  @@map(\"cupping_templates\")\n}\n\nmodel CuppingSession {\n  id             String       @id @default(cuid())\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  createdBy      String\n  creator        User         @relation(fields: [createdBy], references: [id])\n\n  // Session details\n  name        String\n  description String?\n  location    String?\n\n  // Template and configuration\n  templateId String?\n  template   CuppingTemplate? @relation(fields: [templateId], references: [id])\n\n  // Session settings\n  blindTasting       Boolean @default(true)\n  allowComments      Boolean @default(true)\n  requireCalibration Boolean @default(false)\n\n  // Status and timing\n  status      SessionStatus @default(DRAFT)\n  scheduledAt DateTime?\n  startedAt   DateTime?\n  completedAt DateTime?\n\n  // Metadata\n  notes    String?\n  tags     String[] @default([])\n  settings Json     @default(\"{}\")\n\n  // Timestamps\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  participants SessionParticipant[]\n  samples      SessionSample[]\n  scores       Score[]\n\n  @@map(\"cupping_sessions\")\n}\n\nmodel SessionParticipant {\n  id        String         @id @default(cuid())\n  sessionId String\n  session   CuppingSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)\n  userId    String\n  user      User           @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  // Participation details\n  role     ParticipantRole @default(CUPPER)\n  joinedAt DateTime        @default(now())\n  leftAt   DateTime?\n  isActive Boolean         @default(true)\n\n  // Calibration\n  isCalibrated Boolean   @default(false)\n  calibratedAt DateTime?\n\n  @@unique([sessionId, userId])\n  @@map(\"session_participants\")\n}\n\nmodel SessionSample {\n  id        String         @id @default(cuid())\n  sessionId String\n  session   CuppingSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)\n  sampleId  String\n  sample    Sample         @relation(fields: [sampleId], references: [id], onDelete: Cascade)\n\n  // Sample configuration for this session\n  position  Int // Position in the cupping table\n  isBlind   Boolean @default(true)\n  blindCode String? // Code shown to cuppers if blind\n\n  // Sample preparation\n  grindSize String?\n  waterTemp Float?\n  brewRatio String?\n  steepTime Int? // in seconds\n\n  // AI Analysis\n  aiSummary     String?   @map(\"aisummary\") // AI-generated summary of the cupping results\n  aiGeneratedAt DateTime? @map(\"aigeneratedat\") // When the AI summary was generated\n\n  // Timestamps\n  addedAt DateTime @default(now())\n\n  // Relations\n  scores Score[]\n\n  @@unique([sessionId, sampleId])\n  @@unique([sessionId, position])\n  @@map(\"session_samples\")\n}\n\nmodel Score {\n  id              String         @id @default(cuid())\n  sessionId       String\n  session         CuppingSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)\n  sessionSampleId String\n  sessionSample   SessionSample  @relation(fields: [sessionSampleId], references: [id], onDelete: Cascade)\n  sampleId        String\n  sample          Sample         @relation(fields: [sampleId], references: [id], onDelete: Cascade)\n  userId          String\n  user            User           @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  // Scoring details\n  totalScore Float\n  maxScore   Float @default(100)\n\n  // Individual category scores\n  scores Json // Object with category scores\n\n  // Qualitative assessments\n  aroma       Float?\n  flavor      Float?\n  aftertaste  Float?\n  acidity     Float?\n  body        Float?\n  balance     Float?\n  sweetness   Float?\n  cleanliness Float?\n  uniformity  Float?\n  overall     Float?\n\n  // Defects\n  defects Json @default(\"[]\") // Array of defect objects\n\n  // Notes and comments\n  notes        String?\n  privateNotes String?\n\n  // Voice transcription\n  voiceNotes   String?\n  voiceFileUrl String?\n\n  // Status\n  isComplete  Boolean   @default(false)\n  isSubmitted Boolean   @default(false)\n  submittedAt DateTime?\n\n  // Timestamps\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  flavorDescriptors ScoreFlavorDescriptor[]\n\n  @@unique([sessionId, sampleId, userId])\n  @@map(\"scores\")\n}\n\n// ============================================================================\n// ENUMS\n// ============================================================================\n\nenum UserRole {\n  ADMIN // Full access to organization\n  MANAGER // Can manage sessions and users\n  CUPPER // Can participate in sessions\n  VIEWER // Read-only access\n\n  @@map(\"user_role\")\n}\n\nenum SubscriptionStatus {\n  TRIAL\n  ACTIVE\n  PAST_DUE\n  CANCELED\n  UNPAID\n\n  @@map(\"subscription_status\")\n}\n\nenum SubscriptionPlan {\n  STARTER\n  PROFESSIONAL\n  ENTERPRISE\n  CUSTOM\n\n  @@map(\"subscription_plan\")\n}\n\nenum InvitationStatus {\n  PENDING\n  ACCEPTED\n  EXPIRED\n  REVOKED\n\n  @@map(\"invitation_status\")\n}\n\nenum ProcessingMethod {\n  WASHED\n  NATURAL\n  HONEY\n  SEMI_WASHED\n  WET_HULLED\n  ANAEROBIC\n  CARBONIC_MACERATION\n  OTHER\n\n  @@map(\"processing_method\")\n}\n\nenum RoastLevel {\n  LIGHT\n  MEDIUM_LIGHT\n  MEDIUM\n  MEDIUM_DARK\n  DARK\n  FRENCH\n  ITALIAN\n\n  @@map(\"roast_level\")\n}\n\nenum ScoringSystem {\n  SCA // Specialty Coffee Association\n  COE // Cup of Excellence\n  CUSTOM // Custom scoring system\n\n  @@map(\"scoring_system\")\n}\n\nenum SessionStatus {\n  DRAFT // Being prepared\n  SCHEDULED // Scheduled for future\n  ACTIVE // Currently in progress\n  COMPLETED // Finished\n  CANCELLED // Cancelled\n  ARCHIVED // Archived\n\n  @@map(\"session_status\")\n}\n\nenum ParticipantRole {\n  CUPPER // Regular cupper\n  HEAD_JUDGE // Lead cupper/judge\n  OBSERVER // Observer only\n\n  @@map(\"participant_role\")\n}\n\n// ============================================================================\n// FLAVOR DESCRIPTOR MODELS\n// ============================================================================\n\nmodel FlavorDescriptor {\n  id             String         @id @default(cuid())\n  name           String\n  category       FlavorCategory // POSITIVE or NEGATIVE\n  description    String?\n  isDefault      Boolean        @default(false) // System-provided descriptors\n  organizationId String?\n  organization   Organization?  @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  // User who created this custom descriptor (null for default descriptors)\n  createdBy String?\n  creator   User?   @relation(fields: [createdBy], references: [id], onDelete: SetNull)\n\n  // Timestamps\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  scoreDescriptors ScoreFlavorDescriptor[]\n\n  @@unique([name, organizationId]) // Unique within organization\n  @@map(\"flavor_descriptors\")\n}\n\nmodel ScoreFlavorDescriptor {\n  id                 String           @id @default(cuid())\n  scoreId            String\n  score              Score            @relation(fields: [scoreId], references: [id], onDelete: Cascade)\n  flavorDescriptorId String\n  flavorDescriptor   FlavorDescriptor @relation(fields: [flavorDescriptorId], references: [id], onDelete: Cascade)\n\n  // Intensity of this flavor (1-5 scale)\n  intensity Int @default(3)\n\n  // Timestamps\n  createdAt DateTime @default(now())\n\n  @@unique([scoreId, flavorDescriptorId])\n  @@map(\"score_flavor_descriptors\")\n}\n\nenum FlavorCategory {\n  POSITIVE\n  NEGATIVE\n\n  @@map(\"flavor_category\")\n}\n\nenum GradingSystem {\n  SCA // Specialty Coffee Association\n  ETHIOPIAN // Ethiopian grading system\n  COLOMBIAN // Colombian grading system\n  BRAZILIAN // Brazilian grading system\n  KENYAN // Kenyan grading system\n  CUSTOM // Custom grading system\n\n  @@map(\"grading_system\")\n}\n\nenum GradeClassification {\n  SPECIALTY_GRADE // 0-5 full defects (SCA)\n  PREMIUM_GRADE // 6-8 full defects (SCA)\n  EXCHANGE_GRADE // 9-23 full defects (SCA)\n  BELOW_STANDARD // 24+ full defects (SCA)\n  OFF_GRADE // Significant quality issues\n\n  @@map(\"grade_classification\")\n}\n\n// ============================================================================\n// GREEN BEAN GRADING\n// ============================================================================\n\nmodel GreenBeanGrading {\n  id       String @id @default(cuid())\n  sampleId String @unique\n  sample   Sample @relation(fields: [sampleId], references: [id], onDelete: Cascade)\n\n  // Grading System\n  gradingSystem GradingSystem @default(SCA)\n\n  // SCA Defect Counting\n  primaryDefects        Int   @default(0) // Category 1 defects\n  secondaryDefects      Int   @default(0) // Category 2 defects\n  fullDefectEquivalents Float @default(0) // Auto-calculated: primary + (secondary / 5)\n\n  // Defect Details (JSON for flexibility)\n  // Structure: [{type: string, count: number, category: 1|2, description?: string}]\n  defectBreakdown Json @default(\"[]\")\n\n  // Screen Size Analysis\n  // Structure: {size14: number, size15: number, ..., size20: number}\n  screenSizeDistribution Json?\n  averageScreenSize      Float?\n  uniformityPercentage   Float? // Percentage of beans in dominant size\n\n  // Additional Assessments\n  moistureContent Float? // Percentage (10-12% ideal for storage)\n  waterActivity   Float? // aw value (0.55-0.65 ideal)\n  bulkDensity     Float? // g/L\n  colorScore      Int? // 1-10 scale (uniformity and quality)\n  uniformityScore Int? // 1-10 scale (overall uniformity)\n\n  // Classification Results\n  grade          String? // e.g., \"Grade 1\", \"Grade 2\", \"Premium\", \"AA\", \"AB\"\n  classification GradeClassification?\n  qualityScore   Float? // Overall quality score (0-100)\n\n  // Metadata\n  gradedBy          String? // User ID who performed grading\n  gradedAt          DateTime?\n  certifiedBy       String? // For official certifications\n  certificationDate DateTime?\n  notes             String?\n\n  // Timestamps\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"green_bean_gradings\")\n}\n",
  "inlineSchemaHash": "c6e939e797a6556de149b2a9c610cda6fb136430b15ecd96485914eb5b40cbc6",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Organization\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"domain\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subdomain\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscriptionStatus\",\"kind\":\"enum\",\"type\":\"SubscriptionStatus\"},{\"name\":\"subscriptionPlan\",\"kind\":\"enum\",\"type\":\"SubscriptionPlan\"},{\"name\":\"trialEndsAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"subscriptionEndsAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"stripeCustomerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"settings\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrganizationToUser\"},{\"name\":\"cuppingSessions\",\"kind\":\"object\",\"type\":\"CuppingSession\",\"relationName\":\"CuppingSessionToOrganization\"},{\"name\":\"samples\",\"kind\":\"object\",\"type\":\"Sample\",\"relationName\":\"OrganizationToSample\"},{\"name\":\"templates\",\"kind\":\"object\",\"type\":\"CuppingTemplate\",\"relationName\":\"CuppingTemplateToOrganization\"},{\"name\":\"invitations\",\"kind\":\"object\",\"type\":\"Invitation\",\"relationName\":\"InvitationToOrganization\"},{\"name\":\"flavorDescriptors\",\"kind\":\"object\",\"type\":\"FlavorDescriptor\",\"relationName\":\"FlavorDescriptorToOrganization\"}],\"dbName\":\"organizations\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToUser\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"emailVerifiedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastLoginAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"resetToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resetTokenExpiry\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"preferences\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cuppingSessions\",\"kind\":\"object\",\"type\":\"CuppingSession\",\"relationName\":\"CuppingSessionToUser\"},{\"name\":\"scores\",\"kind\":\"object\",\"type\":\"Score\",\"relationName\":\"ScoreToUser\"},{\"name\":\"sessionParticipants\",\"kind\":\"object\",\"type\":\"SessionParticipant\",\"relationName\":\"SessionParticipantToUser\"},{\"name\":\"createdTemplates\",\"kind\":\"object\",\"type\":\"CuppingTemplate\",\"relationName\":\"CuppingTemplateToUser\"},{\"name\":\"createdFlavorDescriptors\",\"kind\":\"object\",\"type\":\"FlavorDescriptor\",\"relationName\":\"FlavorDescriptorToUser\"}],\"dbName\":\"users\"},\"Invitation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"InvitationToOrganization\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"InvitationStatus\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"invitedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"invitations\"},\"Sample\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToSample\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"origin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"region\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"farm\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"producer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variety\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"altitude\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"processingMethod\",\"kind\":\"enum\",\"type\":\"ProcessingMethod\"},{\"name\":\"harvestDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"roaster\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roastDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"roastLevel\",\"kind\":\"enum\",\"type\":\"RoastLevel\"},{\"name\":\"moisture\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"density\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"screenSize\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sessionSamples\",\"kind\":\"object\",\"type\":\"SessionSample\",\"relationName\":\"SampleToSessionSample\"},{\"name\":\"scores\",\"kind\":\"object\",\"type\":\"Score\",\"relationName\":\"SampleToScore\"},{\"name\":\"greenBeanGrading\",\"kind\":\"object\",\"type\":\"GreenBeanGrading\",\"relationName\":\"GreenBeanGradingToSample\"}],\"dbName\":\"samples\"},\"CuppingTemplate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"CuppingTemplateToOrganization\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CuppingTemplateToUser\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isDefault\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"scoringSystem\",\"kind\":\"enum\",\"type\":\"ScoringSystem\"},{\"name\":\"maxScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"categories\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cuppingSessions\",\"kind\":\"object\",\"type\":\"CuppingSession\",\"relationName\":\"CuppingSessionToCuppingTemplate\"}],\"dbName\":\"cupping_templates\"},\"CuppingSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"CuppingSessionToOrganization\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CuppingSessionToUser\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"templateId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"template\",\"kind\":\"object\",\"type\":\"CuppingTemplate\",\"relationName\":\"CuppingSessionToCuppingTemplate\"},{\"name\":\"blindTasting\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"allowComments\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"requireCalibration\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"SessionStatus\"},{\"name\":\"scheduledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"settings\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"participants\",\"kind\":\"object\",\"type\":\"SessionParticipant\",\"relationName\":\"CuppingSessionToSessionParticipant\"},{\"name\":\"samples\",\"kind\":\"object\",\"type\":\"SessionSample\",\"relationName\":\"CuppingSessionToSessionSample\"},{\"name\":\"scores\",\"kind\":\"object\",\"type\":\"Score\",\"relationName\":\"CuppingSessionToScore\"}],\"dbName\":\"cupping_sessions\"},\"SessionParticipant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session\",\"kind\":\"object\",\"type\":\"CuppingSession\",\"relationName\":\"CuppingSessionToSessionParticipant\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionParticipantToUser\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"ParticipantRole\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"leftAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isCalibrated\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"calibratedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"session_participants\"},\"SessionSample\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session\",\"kind\":\"object\",\"type\":\"CuppingSession\",\"relationName\":\"CuppingSessionToSessionSample\"},{\"name\":\"sampleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sample\",\"kind\":\"object\",\"type\":\"Sample\",\"relationName\":\"SampleToSessionSample\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isBlind\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"blindCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"grindSize\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"waterTemp\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"brewRatio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"steepTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"aiSummary\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"aisummary\"},{\"name\":\"aiGeneratedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"aigeneratedat\"},{\"name\":\"addedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scores\",\"kind\":\"object\",\"type\":\"Score\",\"relationName\":\"ScoreToSessionSample\"}],\"dbName\":\"session_samples\"},\"Score\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session\",\"kind\":\"object\",\"type\":\"CuppingSession\",\"relationName\":\"CuppingSessionToScore\"},{\"name\":\"sessionSampleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionSample\",\"kind\":\"object\",\"type\":\"SessionSample\",\"relationName\":\"ScoreToSessionSample\"},{\"name\":\"sampleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sample\",\"kind\":\"object\",\"type\":\"Sample\",\"relationName\":\"SampleToScore\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ScoreToUser\"},{\"name\":\"totalScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"maxScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"scores\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"aroma\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"flavor\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"aftertaste\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"acidity\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"body\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"balance\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"sweetness\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"cleanliness\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"uniformity\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"overall\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"defects\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"privateNotes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"voiceNotes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"voiceFileUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isComplete\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isSubmitted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"submittedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"flavorDescriptors\",\"kind\":\"object\",\"type\":\"ScoreFlavorDescriptor\",\"relationName\":\"ScoreToScoreFlavorDescriptor\"}],\"dbName\":\"scores\"},\"FlavorDescriptor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"FlavorCategory\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isDefault\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"FlavorDescriptorToOrganization\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FlavorDescriptorToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scoreDescriptors\",\"kind\":\"object\",\"type\":\"ScoreFlavorDescriptor\",\"relationName\":\"FlavorDescriptorToScoreFlavorDescriptor\"}],\"dbName\":\"flavor_descriptors\"},\"ScoreFlavorDescriptor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scoreId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"score\",\"kind\":\"object\",\"type\":\"Score\",\"relationName\":\"ScoreToScoreFlavorDescriptor\"},{\"name\":\"flavorDescriptorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"flavorDescriptor\",\"kind\":\"object\",\"type\":\"FlavorDescriptor\",\"relationName\":\"FlavorDescriptorToScoreFlavorDescriptor\"},{\"name\":\"intensity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"score_flavor_descriptors\"},\"GreenBeanGrading\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sampleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sample\",\"kind\":\"object\",\"type\":\"Sample\",\"relationName\":\"GreenBeanGradingToSample\"},{\"name\":\"gradingSystem\",\"kind\":\"enum\",\"type\":\"GradingSystem\"},{\"name\":\"primaryDefects\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"secondaryDefects\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fullDefectEquivalents\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"defectBreakdown\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"screenSizeDistribution\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"averageScreenSize\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"uniformityPercentage\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"moistureContent\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"waterActivity\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"bulkDensity\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"colorScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"uniformityScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"grade\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"classification\",\"kind\":\"enum\",\"type\":\"GradeClassification\"},{\"name\":\"qualityScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"gradedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gradedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"certifiedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"certificationDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"green_bean_gradings\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

