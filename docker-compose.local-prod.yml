services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cupperly-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-cupperly}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    ports:
      - "${POSTGRES_PORT:-15432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - cupperly-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: cupperly-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cupperly-network

  # Backend API
  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile.local
      target: production
    container_name: cupperly-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:password@postgres:5432/cupperly}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      PORT: 3001
    ports:
      - "${API_PORT:-3001}:3001"
    depends_on:
      - postgres
      - redis
    networks:
      - cupperly-network

  # Frontend Web App
  web:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile.local
      target: runner
    container_name: cupperly-web
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
    ports:
      - "${WEB_PORT:-3000}:3000"
    depends_on:
      - api
    networks:
      - cupperly-network

volumes:
  postgres_data:
  redis_data:

networks:
  cupperly-network:
    driver: bridge

