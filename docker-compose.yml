services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cupperly-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-cupperly}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    ports:
      - "${POSTGRES_PORT:-15432}:5432"  # Only expose for development
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - cupperly-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: cupperly-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cupperly-network

  # Backend API
  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
      target: ${BUILD_TARGET:-production}  # Use production by default, development for local
    container_name: cupperly-api
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:password@postgres:5432/cupperly}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      JWT_SECRET: ${JWT_SECRET:-dev-jwt-secret-change-in-production}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-dev-refresh-secret-change-in-production}
      PORT: 3001
    ports:
      - "${API_PORT:-3001}:3001"
    # Volumes only for development - commented out for production
    # Uncomment these lines for local development
    # volumes:
    #   - ./apps/api:/app/apps/api:cached
    #   - ./packages:/app/packages:cached
    #   - /app/node_modules
    #   - /app/apps/api/node_modules
    #   - /app/generated
    depends_on:
      - postgres
      - redis
    networks:
      - cupperly-network
    # Command only for development
    # command: npm run dev

  # Frontend Web App
  web:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
      target: ${BUILD_TARGET:-runner}  # Use runner (production) by default, development for local
    container_name: cupperly-web
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3001}
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-dev-nextauth-secret-change-in-production}
    ports:
      - "${WEB_PORT:-3000}:3000"
    # Volumes only for development - commented out for production
    # Uncomment these lines for local development
    # volumes:
    #   - ./apps/web:/app/apps/web:cached
    #   - ./packages:/app/packages:cached
    #   - /app/node_modules
    #   - /app/apps/web/node_modules
    #   - /app/apps/web/.next
    depends_on:
      - api
    networks:
      - cupperly-network
    # Command only for development
    # command: npm run dev

  # Database Admin (Adminer) - Optional for development
  adminer:
    image: adminer:4.8.1
    container_name: cupperly-adminer
    restart: unless-stopped
    ports:
      - "8081:8080"  # Changed to 8081 to avoid conflicts with Coolify
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - cupperly-network
    profiles:
      - dev  # Only start with --profile dev flag

volumes:
  postgres_data:
  redis_data:

networks:
  cupperly-network:
    driver: bridge